{{/* vim: set filetype=mustache: */}}
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: aicoe-ci-listener
  labels: {{- include "meteor-pipelines.labels" . | nindent 4 }}
spec:
  serviceAccountName: pipeline
  triggers:
    - name: github-pull-request-model
      interceptors:
        - github:
            secretRef:
              secretName: github-secret
              secretKey: webhooksecret
            eventTypes:
              - pull_request
        - cel:
            filter: "(body.action in ['opened', 'closed', 'synchronize', 'reopened', 'created']) && (body.repository.name == 'elyra-aidevsecops-tutorial')"
      bindings:
        - kind: TriggerBinding
          ref: git-model-binding
      template:
        ref: git-model-template

    - name: github-pull-request
      interceptors:
        - github:
            secretRef:
              secretName: github-secret
              secretKey: webhooksecret
            eventTypes:
              - pull_request
        - cel:
            filter: "(body.action in ['opened', 'closed', 'synchronize', 'reopened', 'created']) && (body.repository.name != 'prescriptions')"
      bindings:
        - kind: TriggerBinding
          ref: git-pr-binding
      template:
        ref: git-pr-template

    - name: github-pull-request-comment
      interceptors:
        - github:
            secretRef:
              secretName: github-secret
              secretKey: webhooksecret
            eventTypes:
              - issue_comment
        - cel:
            filter: "(body.comment.body.startsWith('/retest') || body.comment.body.startsWith('/deploy')) && (body.repository.name != 'prescriptions')"
      bindings:
        - kind: TriggerBinding
          ref: git-issue-comment-binding
      template:
        ref: git-pr-template

    - name: github-tag-release
      interceptors:
        - github:
            secretRef:
              secretName: github-secret
              secretKey: webhooksecret
            eventTypes:
              - create
        - cel:
            filter: "body.ref_type == 'tag'"
      bindings:
        - kind: TriggerBinding
          ref: git-tag
      template:
        ref: git-tag-template

    - name: github-issue-release
      interceptors:
        - github:
            secretRef:
              secretName: github-secret
              secretKey: webhooksecret
            eventTypes:
              - issues
        - cel:
            filter: "(body.issue.title in ['Deliver Container Image','Deliver Missing Module','Upstream Sync Up']) && (body.action in ['opened', 'reopened'])"
      bindings:
        - kind: TriggerBinding
          ref: git-issue-binding
      template:
        ref: git-issue-template

    # custom pipeline for rhods
    - name: rhods-issue-pipeline
      interceptors:
        - github:
            secretRef:
              secretName: github-secret
              secretKey: webhooksecret
            eventTypes:
              - issues
        - cel:
            filter: "(body.issue.title in ['Upstream Sync Up']) && (body.action in ['opened', 'reopened']) && (body.organization.login == 'red-hat-data-services')"
      bindings:
        - kind: TriggerBinding
          ref: git-issue-binding
      template:
        ref: git-issue-template

    - name: webhook-tag-release
      bindings:
        - kind: TriggerBinding
          ref: github-tag
      template:
        ref: git-tag
